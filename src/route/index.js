// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—é express –¥–ª—è back-end —Å–µ—Ä–≤–µ—Ä–∞
const express = require('express')
// C—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ—É—Ç–µ—Ä - –º—ñ—Å—Ü–µ, –∫—É–¥–∏ –º–∏ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –µ–Ω–¥–ø–æ—ó–Ω—Ç–∏
const router = express.Router()

// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('index', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'index',
    title: 'JS-PRACTICE',
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ==========================================================================================================
// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/user-create', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É

  const list = User.getList()

  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('user-create', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'user-create',
    title: 'USER-CRUD',

    data: {
      users: {
        list,
        isEmpty: list.length === 0,
      },
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

//! ==========================USER-1======================================
//! ==========================USER-1======================================

//* –º–∏ –º–∞—î–º–æ –¥–∞–Ω—ñ —è–∫—ñ –Ω–∞–º –ø—Ä–∏—Ö–æ–¥—è—Ç—å —ñ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —ó—Ö –∑–±–µ—Ä–µ–≥—Ç–∏. –î–ª—è —Ü—å–æ–≥–æ –º–∏ —Å—Ç–≤–æ—Ä–∏–º–æ –∫–æ–¥ —è–∫–∏–π –±—É–¥–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–µ—Ä–≤–µ—Ä–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω—ñ, –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ –Ω–∏–º–∏ —ñ —Ä–æ–±–∏—Ç–∏ –≤—Å–µ —â–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ...

// —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞—Å User
class User {
  static #list = []

  constructor(email, login, password) {
    // –ø—ñ–¥–∫–ª—é—á–∏–º–æ –¥–∞–Ω—ñ –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —ñ –≤ —Å–∞–º –∫–ª–∞—Å –ø–µ—Ä–µ–¥–∞–º–æ
    this.email = email
    this.login = login
    this.password = password
    this.id = new Date().getTime()
  }

  verifyPassword = (password) => this.password === password

  // c—Ç–≤–æ—Ä–∏–º–æ —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ add —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ user —ñ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –π–æ–≥–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—É –∑–º—ñ–Ω–Ω—É #list
  static add = (user) => this.#list.push(user)

  static getList = () => this.#list

  static getById = (id) =>
    this.#list.find((user) => user.id === id)

  static deleteById = (id) => {
    const index = this.#list.findIndex(
      (user) => user.id === id,
    )

    if (index !== -1) {
      this.#list.splice(index, 1)
      return true
    } else {
      return false
    }
  }

  static updateById = (id, data) => {
    const user = this.getById(id)

    if (user) {
      this.update(user, data)

      return true
    } else {
      return false
    }
  }

  static update = (user, { email }) => {
    if (email) {
      user.email = email
    }
  }
}
// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/user-create', function (req, res) {
  // —á–µ—Ä–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏—Ä–∏–∑–∞—Ü—ñ—é –¥—ñ—Å—Ç–∞—î–º–æ email login —ñ password
  const { email, login, password } = req.body

  // —Å—Ç–≤–æ—Ä–∏–º–æ –Ω–æ–≤–æ–≥–æ User –∫—É–¥–∏ –ø–µ—Ä–µ–¥–∞–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ
  const user = new User(email, login, password)

  User.add(user)

  console.log(User.getList())

  res.render('success-info', {
    style: 'success-info',
    info: 'The user is created! ‚úÖ',
  })
})

// ================================================================
// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/user-delete', function (req, res) {
  // query - —Ç–µ —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–Ω–∞–∫—É ?
  const { id } = req.query

  User.deleteById(Number(id))

  res.render('success-info', {
    style: 'success-info',
    info: '‚õî The user was removed!',
  })
})

// ================================================================
// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/user-update', function (req, res) {
  // query - —Ç–µ —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–Ω–∞–∫—É ?
  const { email, password, id } = req.body

  let result = false

  const user = User.getById(Number(id))

  if (user.verifyPassword(password)) {
    User.update(user, { email })
    result = true
  }

  res.render('success-info', {
    style: 'success-info',
    info: result
      ? 'Email is updated! ‚úÖ'
      : 'An error occurred (wrong password) üÜò',
  })
})

//! ===============Product-1==========================================
//! ===============Product-1==========================================

//* –ó–∞–≤–¥–∞–Ω–Ω—è –ø–æ–ª—è–≥–∞—î —É –Ω–∞–ø–∏—Å–∞–Ω–Ω—ñ CRUD –¥–ª—è —Å—É—Ç–Ω–æ—Å—Ç—ñ product

// id - –£–Ω—ñ–∫–∞–ª—å–Ω–µ —á–∏—Å–ª–æ –∑ 5 —Ü–∏—Ñ—Ä, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü—ñ—é Math.random
// createDate - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ ISO —Ä—è–¥–∫–∞, —è–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —Ç–∞ –¥–æ–¥–∞–Ω–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ–±‚Äô—î–∫—Ç–∞ –≤ –º–µ—Ç–æ–¥—ñ –∫–ª–∞—Å—É constructor
// name - –¢–µ–∫—Å—Ç–æ–≤–∞ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É
// price - –¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É, —á–∏—Å–ª–æ
// description - –¢–µ–∫—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É

//* –≤–∏—â–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –ø–æ–ª—è –∫–ª–∞—Å—É Product, —è–∫—ñ –∑‚Äô—è–≤–ª—è—î—Ç—å—Å—è –≤ –æ–±‚Äô—î–∫—Ç–∞, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É

// #list - –ü—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ, —è–∫–µ –º—ñ—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// getList() - –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// add(product) - –î–æ–¥–∞—î –ø–µ—Ä–µ–¥–∞–Ω–∏–π –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ–ª—ñ #list
// getById(id) - –ó–Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ID, —è–∫–µ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–º, —Ç–∞ —è–∫–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
// updateById(id, data) - –û–Ω–æ–≤–ª—é—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—É data –≤ –æ–±‚Äô—î–∫—Ç —Ç–æ–≤–∞—Ä—É, —è–∫–∏–π –±—É–≤ –∑–Ω–∞–π–¥–µ–Ω–∏–π –ø–æ ID. –ú–æ–∂–Ω–∞ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ price, name, description
// deleteById(id) - –í–∏–¥–∞–ª—è—î —Ç–æ–≤–∞—Ä –ø–æ –π–æ–≥–æ ID –∑—ñ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤

//* –≤–∏—â–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–ª—è –∫–ª–∞—Å—É Product, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–ª–∞—Å Product
class Product {
  static initialized = false

  static #list = []

  constructor(name, price, description) {
    this.id = Math.floor(Math.random() * 90000) + 10000
    this.createDate = new Date().toISOString()
    this.name = name
    this.price = price
    this.description = description
  }

  static init() {
    if (!this.initialized) {
      this.#list.push(
        new Product('Apple iPhone 14 Pro Max', 800, "–ï–∫—Ä–∞–Ω (6.7\", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / –æ—Å–Ω–æ–≤–Ω–∞ –∫–≤–∞–¥—Ä–æ-–∫–∞–º–µ—Ä–∞: 48 –ú–ø + 12 –ú–ø + 12 –ú–ø ..."),
        new Product('Apple MacBook Pro 16" M2', 930, "–ï–∫—Ä–∞–Ω 16.2\" Liquid Retina XDR (3456x2234) 120 –ì—Ü, –≥–ª—è–Ω—Å–æ–≤–∏–π / Apple M2 Pro / RAM 16 –ì–ë / SSD 512 –ì–ë / Apple M2 Pro Graphics ..."),
        new Product('Apple MacBook Air 15.3', 1000, "–ï–∫—Ä–∞–Ω (–∑ 15-–¥—é–π–º—ñ–≤, —Ç–∏–ø –µ–∫—Ä–∞–Ω—É) / –ü—Ä–æ—Ü–µ—Å–æ—Ä (—Ç–∏–ø –ø—Ä–æ—Ü–µ—Å–æ—Ä–∞) / –û–ó–ü (—Ç–∏–ø —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–º'—è—Ç—ñ) / –ù–∞–∫–æ–ø–∏—á—É–≤–∞—á ..."),
      )

      this.initialized = true
    }
  }

  static getList() {
    return this.#list
  }

  static add(product) {
    this.#list.push(product)
  }

  static getById(id) {
    return this.#list.find((product) => product.id === id)
  }

  static updateById(id, data) {
    const product = this.getById(id)
    if (product) {
      Object.assign(product, data)
      return true
    } else {
      return false
    }
  }

  static deleteById(id) {
    const index = this.#list.findIndex(
      (product) => product.id === id,
    )
    if (index !== -1) {
      this.#list.splice(index, 1)
      return true
    } else {
      return false
    }
  }
}

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-create —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î container/product-create

router.get('/product-create', function (req, res) {
  res.render('product-create', {
    style: 'product-create',
  })
})

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ endpoint POST –∑ PATH /product-create —è–∫–∏–π –æ—Ç—Ä–∏–º—É—î –≤ req.body –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è product

router.post('/product-create', function (req, res) {
  const { name, price, description } = req.body

  if (!name || !price || !description) {
    res.render('alert', {
      style: 'alert',
      message:
        'üÜò Product not created (add a short description of the product)!',
      added: false,
    })
  } else {
    const product = new Product(name, price, description)
    Product.add(product)
    res.render('alert', {
      style: 'alert',
      message: '‚úÖ Success! The product was created',
      added: true,
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –æ–±‚Äô—î–∫—Ç—É —Ç–æ–≤–∞—Ä—É –≤ container/product-create, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç method: POST, action: /product-create

// –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ POST –∑–∞–ø–∏—Ç –Ω–∞ –µ–Ω–¥–ø–æ—ó–Ω—Ç /product-create

//–≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-create –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.body –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É (name price, description)
// - —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä
// - –∑–±–µ—Ä–µ–≥—Ç–∏ —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ container/alert

// container/alert –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç–∞—Ö, —è–∫—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å –ø–µ–≤–Ω—É –æ–ø–µ—Ä–∞—Ü—ñ—é –Ω–∞–¥ –æ–±‚Äô—î–∫—Ç–∞–º–∏ product —Ç–∞ –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó (—É—Å–ø—ñ—à–Ω–æ –∞–±–æ –ø–æ–º–∏–ª–∫–∞)

// –ø–æ—Å–∏–ª–∞–Ω–Ω—è-–∫–Ω–æ–ø–∫–∞ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥ –ø–æ–≤–∏–Ω–Ω–æ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É /product-list

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-list —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î container/product-list

router.get('/product-list', function (req, res) {
  if(!Product.initialized) {
    Product.init();
  }

  const products = Product.getList()

  res.render('product-list', {
    style: 'product-list',
    data: {
      products,
    },
  })
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –¥–∏–∑–∞–π–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –¥–ª—è container/product-list, –≤ —è–∫–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤, –ø—Ä–æ–∫–∏–Ω—É—Ç–∏ –≤ container –¥–∞–Ω—ñ c–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –≤–∏–≤–µ—Å—Ç–∏ —ó—Ö –≤ container/product-list

// –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–Ω–µ—Å—Ç–∏ –≤ –æ–∫—Ä–µ–º–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑ –Ω–∞–∑–≤–æ—é product-card

// –ø–æ—Å–∏–ª–∞–Ω–Ω—è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–æ–≤–∏–Ω–Ω–æ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É —Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É. PATH: /product-edit?id=<—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É>

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-edit —è–∫–∏–π –ø—Ä–∏–π–º–∞—î query –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ –Ω–∞–∑–≤–æ—é id –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—ñ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î container/product-edit –∑ –¥–∞–Ω–∏–º–∏ —Ç–æ–≤–∞—Ä—É

router.get('/product-edit', function (req, res) {
  const { id } = req.query
  const product = Product.getById(Number(id))
  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
      added: false,
    })
  } else {
    res.render('product-edit', {
      style: 'product-edit',
      data: {
        product,
      },
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –¥–∏–∑–∞–π–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –¥–ª—è container/product-edit, –≤ —è–∫–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ req.query –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–±‚Äô—î–∫—Ç —Å—É—Ç–Ω–æ—Å—Ç—ñ product –∑ —Ç–∞–∫–∏–º id
// - –ø—Ä–æ–∫–∏–Ω—É—Ç–∏ –¥–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É –≤ container
// - –≤–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É –≤ –ø–æ–ª—è—Ö —Ñ–æ—Ä–º–∏ –≤ container/product-edit.
// - —è–∫—â–æ –ø—Ä–∏ –ø–æ—à—É–∫—É product –ø–æ id –Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä—É, —Ç–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é "–¢–æ–≤–∞—Ä –∑ —Ç–∞–∫–∏–º ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ endpoint POST –∑ PATH /product-edit —è–∫–∏–π –æ—Ç—Ä–∏–º—É—î –≤ req.body –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è product

router.post('/product-edit', function (req, res) {
  const { id, name, price, description } = req.body;
  const product = Product.getById(Number(id));

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
    });
  } else {
    const isChanged = name !== product.name || price !== product.price || description !== product.description;

    if (!isChanged) {
      return res.render('alert', {
        style: 'alert',
        message: '‚ö†Ô∏è Make changes to at least one field',
        id,
        isCheck: true,
      });
    }

    product.name = name;
    product.price = price;
    product.description = description;
    res.render('alert', {
      style: 'alert',
      message: '‚úÖ Success! Product updated!',
      added: true,
    });
  }
});

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É –∑ container/product-edit, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç method: POST, action: /product-edit

// –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–±–µ—Ä–µ–≥—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ POST –∑–∞–ø–∏—Ç –Ω–∞ –µ–Ω–¥–ø–æ—ó–Ω—Ç /product-edit

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-edit –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.body –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É (name, price, description) —Ç–∞ id —Ç–æ–≤–∞—Ä—É
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id —Ç–æ–≤–∞—Ä—É –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≤ —Ç–æ–≤–∞—Ä—ñ (name, price, description)
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-delete —è–∫–∏–π –ø—Ä–∏–π–º–∞—î query –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ –Ω–∞–∑–≤–æ—é id –≤ –ø–æ—Å–∏–ª–∞–Ω—ñ

router.get('/product-delete', function (req, res) {
  const { id } = req.query
  const product = Product.getById(Number(id))

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
      added: false,
    })
  } else {
    res.render('product-delete', {
      style: 'product-delete',
      data: {
        product,
      },
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É –∑ container/product-edit, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - –∑—Ä–æ–±–∏—Ç–∏ –∫–Ω–æ–ø–∫—É-–ø–æ—Å–∏–ª–∞–Ω–Ω—è "–í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä"
// - —è–∫–µ –±—É–¥–µ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É-–µ–Ω–¥–ø–æ—ó–Ω—Ç –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
// - —Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É.
// - PATH: /product-edit?id=<—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É>

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-delete –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.query –æ—Ç—Ä–∏–º–∞—Ç–∏ id —Ç–æ–≤–∞—Ä—É
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id —Ç–æ–≤–∞—Ä—É –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

// POST endpoint to handle product deletion
router.post('/product-delete', function (req, res) {
  const { id } = req.body
  const product = Product.getById(Number(id))

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
    })
  } else {
    const deleted = Product.deleteById(Number(id))
    if (deleted) {
      res.render('alert', {
        style: 'alert',
        message: '‚õî Product deleted!',
        added: true,
      })
    } else {
      res.render('alert', {
        style: 'alert',
        message: 'üÜò Could not delete the product',
      })
    }
  }
})
// ===========================================================================

// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ä–æ—É—Ç–µ—Ä –¥–æ –±–µ–∫-–µ–Ω–¥—É
module.exports = router
