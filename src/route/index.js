// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—é express –¥–ª—è back-end —Å–µ—Ä–≤–µ—Ä–∞
const express = require('express')
// C—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ—É—Ç–µ—Ä - –º—ñ—Å—Ü–µ, –∫—É–¥–∏ –º–∏ –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ –µ–Ω–¥–ø–æ—ó–Ω—Ç–∏
const router = express.Router()

// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('index', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'index',
    title: 'JS-PRACTICE-CRUD',
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ==========================================================================================================
// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/user-create', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É

  const list = User.getList()

  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('user-create', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'user-create',
    title: 'JS-PRACTICE-CRUD',

    data: {
      users: {
        list,
        isEmpty: list.length === 0,
      },
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

//! ==========================USER-1======================================
//! ==========================USER-1======================================

//* –º–∏ –º–∞—î–º–æ –¥–∞–Ω—ñ —è–∫—ñ –Ω–∞–º –ø—Ä–∏—Ö–æ–¥—è—Ç—å —ñ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —ó—Ö –∑–±–µ—Ä–µ–≥—Ç–∏. –î–ª—è —Ü—å–æ–≥–æ –º–∏ —Å—Ç–≤–æ—Ä–∏–º–æ –∫–æ–¥ —è–∫–∏–π –±—É–¥–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–µ—Ä–≤–µ—Ä–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω—ñ, –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ –Ω–∏–º–∏ —ñ —Ä–æ–±–∏—Ç–∏ –≤—Å–µ —â–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ...

// —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞—Å User
class User {
  static #list = []

  constructor(email, login, password) {
    // –ø—ñ–¥–∫–ª—é—á–∏–º–æ –¥–∞–Ω—ñ –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —ñ –≤ —Å–∞–º –∫–ª–∞—Å –ø–µ—Ä–µ–¥–∞–º–æ
    this.email = email
    this.login = login
    this.password = password
    this.id = new Date().getTime()
  }

  verifyPassword = (password) => this.password === password

  // c—Ç–≤–æ—Ä–∏–º–æ —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ add —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ user —ñ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –π–æ–≥–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—É –∑–º—ñ–Ω–Ω—É #list
  static add = (user) => this.#list.push(user)

  static getList = () => this.#list

  static getById = (id) =>
    this.#list.find((user) => user.id === id)

  static deleteById = (id) => {
    const index = this.#list.findIndex(
      (user) => user.id === id,
    )

    if (index !== -1) {
      this.#list.splice(index, 1)
      return true
    } else {
      return false
    }
  }

  static updateById = (id, data) => {
    const user = this.getById(id)

    if (user) {
      this.update(user, data)

      return true
    } else {
      return false
    }
  }

  static update = (user, { email }) => {
    if (email) {
      user.email = email
    }
  }
}
// ================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/user-create', function (req, res) {
  // —á–µ—Ä–µ–∑ –¥–µ—Å—Ç—Ä—É–∫—Ç–∏—Ä–∏–∑–∞—Ü—ñ—é –¥—ñ—Å—Ç–∞—î–º–æ email login —ñ password
  const { email, login, password } = req.body

  // —Å—Ç–≤–æ—Ä–∏–º–æ –Ω–æ–≤–æ–≥–æ User –∫—É–¥–∏ –ø–µ—Ä–µ–¥–∞–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ
  const user = new User(email, login, password)

  User.add(user)

  console.log(User.getList())

  res.render('success-info', {
    style: 'success-info',
    info: 'The user is created! ‚úÖ',
  })
})

// ================================================================
// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/user-delete', function (req, res) {
  // query - —Ç–µ —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–Ω–∞–∫—É ?
  const { id } = req.query

  User.deleteById(Number(id))

  res.render('success-info', {
    style: 'success-info',
    info: '‚õî The user was removed!',
  })
})

// ================================================================
// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/user-update', function (req, res) {
  // query - —Ç–µ —â–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–Ω–∞–∫—É ?
  const { email, password, id } = req.body

  let result = false

  const user = User.getById(Number(id))

  if (user.verifyPassword(password)) {
    User.update(user, { email })
    result = true
  }

  res.render('success-info', {
    style: 'success-info',
    info: result
      ? 'Email is updated! ‚úÖ'
      : 'An error occurred (wrong password) üÜò',
  })
})

//! ===============Product-1==========================================
//! ===============Product-1==========================================

//* –ó–∞–≤–¥–∞–Ω–Ω—è –ø–æ–ª—è–≥–∞—î —É –Ω–∞–ø–∏—Å–∞–Ω–Ω—ñ CRUD –¥–ª—è —Å—É—Ç–Ω–æ—Å—Ç—ñ product

// id - –£–Ω—ñ–∫–∞–ª—å–Ω–µ —á–∏—Å–ª–æ –∑ 5 —Ü–∏—Ñ—Ä, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü—ñ—é Math.random
// createDate - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ ISO —Ä—è–¥–∫–∞, —è–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ —Ç–∞ –¥–æ–¥–∞–Ω–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ–±‚Äô—î–∫—Ç–∞ –≤ –º–µ—Ç–æ–¥—ñ –∫–ª–∞—Å—É constructor
// name - –¢–µ–∫—Å—Ç–æ–≤–∞ –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É
// price - –¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É, —á–∏—Å–ª–æ
// description - –¢–µ–∫—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É

//* –≤–∏—â–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –ø–æ–ª—è –∫–ª–∞—Å—É Product, —è–∫—ñ –∑‚Äô—è–≤–ª—è—î—Ç—å—Å—è –≤ –æ–±‚Äô—î–∫—Ç–∞, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É

// #list - –ü—Ä–∏–≤–∞—Ç–Ω–µ –ø–æ–ª–µ, —è–∫–µ –º—ñ—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// getList() - –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// add(product) - –î–æ–¥–∞—î –ø–µ—Ä–µ–¥–∞–Ω–∏–π –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ–ª—ñ #list
// getById(id) - –ó–Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é ID, —è–∫–µ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ —á–∏—Å–ª–æ–º, —Ç–∞ —è–∫–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
// updateById(id, data) - –û–Ω–æ–≤–ª—é—î –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—É data –≤ –æ–±‚Äô—î–∫—Ç —Ç–æ–≤–∞—Ä—É, —è–∫–∏–π –±—É–≤ –∑–Ω–∞–π–¥–µ–Ω–∏–π –ø–æ ID. –ú–æ–∂–Ω–∞ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ price, name, description
// deleteById(id) - –í–∏–¥–∞–ª—è—î —Ç–æ–≤–∞—Ä –ø–æ –π–æ–≥–æ ID –∑—ñ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤

//* –≤–∏—â–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –ø–æ–ª—è –∫–ª–∞—Å—É Product, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–ª–∞—Å Product
class Product {
  static initialized = false

  static #list = []

  constructor(name, price, description) {
    this.id = Math.floor(Math.random() * 90000) + 10000
    this.createDate = new Date().toISOString()
    this.name = name
    this.price = price
    this.description = description
  }

  static init() {
    if (!this.initialized) {
      this.#list.push(
        new Product(
          'Apple iPhone 14 Pro Max',
          800,
          '–ï–∫—Ä–∞–Ω (6.7", OLED (Super Retina XDR), 2796x1290) / Apple A16 Bionic / –æ—Å–Ω–æ–≤–Ω–∞ –∫–≤–∞–¥—Ä–æ-–∫–∞–º–µ—Ä–∞: 48 –ú–ø + 12 –ú–ø + 12 –ú–ø ...',
        ),
        new Product(
          'Apple MacBook Pro 16" M2',
          930,
          '–ï–∫—Ä–∞–Ω 16.2" Liquid Retina XDR (3456x2234) 120 –ì—Ü, –≥–ª—è–Ω—Å–æ–≤–∏–π / Apple M2 Pro / RAM 16 –ì–ë / SSD 512 –ì–ë / Apple M2 Pro Graphics ...',
        ),
        new Product(
          'Apple MacBook Air 15.3',
          1000,
          "–ï–∫—Ä–∞–Ω (–∑ 15-–¥—é–π–º—ñ–≤, —Ç–∏–ø –µ–∫—Ä–∞–Ω—É) / –ü—Ä–æ—Ü–µ—Å–æ—Ä (—Ç–∏–ø –ø—Ä–æ—Ü–µ—Å–æ—Ä–∞) / –û–ó–ü (—Ç–∏–ø —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–º'—è—Ç—ñ) / –ù–∞–∫–æ–ø–∏—á—É–≤–∞—á ...",
        ),
      )

      this.initialized = true
    }
  }

  static getList = () => this.#list

  static add = (product) => this.#list.push(product)

  static getById = (id) =>
    this.#list.find((product) => product.id === id)

  static updateById = (id, data) => {
    const product = this.getById(id)
    if (product) {
      Object.assign(product, data)
      return true
    } else {
      return false
    }
  }

  static deleteById = (id) => {
    const index = this.#list.findIndex(
      (product) => product.id === id,
    )
    if (index !== -1) {
      this.#list.splice(index, 1)
      return true
    } else {
      return false
    }
  }
}

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-create —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î container/product-create

router.get('/product-create', function (req, res) {
  res.render('product-create', {
    style: 'product-create',
    title: 'JS-PRACTICE-CRUD',
  })
})

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ endpoint POST –∑ PATH /product-create —è–∫–∏–π –æ—Ç—Ä–∏–º—É—î –≤ req.body –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è product

router.post('/product-create', function (req, res) {
  const { name, price, description } = req.body

  if (!name || !price || !description) {
    res.render('alert', {
      style: 'alert',
      message:
        'üÜò Product not created (add a short description of the product)!',
      added: false,
    })
  } else {
    const product = new Product(name, price, description)
    Product.add(product)
    res.render('alert', {
      style: 'alert',
      message: '‚úÖ Success! The product was created',
      added: true,
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –æ–±‚Äô—î–∫—Ç—É —Ç–æ–≤–∞—Ä—É –≤ container/product-create, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç method: POST, action: /product-create

// –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ POST –∑–∞–ø–∏—Ç –Ω–∞ –µ–Ω–¥–ø–æ—ó–Ω—Ç /product-create

//–≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-create –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.body –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É (name price, description)
// - —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä
// - –∑–±–µ—Ä–µ–≥—Ç–∏ —Ç–æ–≤–∞—Ä –≤ —Å–ø–∏—Å–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ container/alert

// container/alert –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç–∞—Ö, —è–∫—ñ –≤–∏–∫–æ–Ω—É—é—Ç—å –ø–µ–≤–Ω—É –æ–ø–µ—Ä–∞—Ü—ñ—é –Ω–∞–¥ –æ–±‚Äô—î–∫—Ç–∞–º–∏ product —Ç–∞ –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó (—É—Å–ø—ñ—à–Ω–æ –∞–±–æ –ø–æ–º–∏–ª–∫–∞)

// –ø–æ—Å–∏–ª–∞–Ω–Ω—è-–∫–Ω–æ–ø–∫–∞ –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –Ω–∞–∑–∞–¥ –ø–æ–≤–∏–Ω–Ω–æ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É /product-list

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-list —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î container/product-list

router.get('/product-list', function (req, res) {
  if (!Product.initialized) {
    Product.init()
  }

  const products = Product.getList()

  res.render('product-list', {
    style: 'product-list',
    title: 'JS-PRACTICE-CRUD',
    data: {
      products,
    },
  })
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –¥–∏–∑–∞–π–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –¥–ª—è container/product-list, –≤ —è–∫–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤, –ø—Ä–æ–∫–∏–Ω—É—Ç–∏ –≤ container –¥–∞–Ω—ñ c–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ —Ç–∞ –≤–∏–≤–µ—Å—Ç–∏ —ó—Ö –≤ container/product-list

// –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–Ω–µ—Å—Ç–∏ –≤ –æ–∫—Ä–µ–º–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑ –Ω–∞–∑–≤–æ—é product-card

// –ø–æ—Å–∏–ª–∞–Ω–Ω—è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–æ–≤–∏–Ω–Ω–æ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É —Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É. PATH: /product-edit?id=<—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É>

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-edit —è–∫–∏–π –ø—Ä–∏–π–º–∞—î query –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ –Ω–∞–∑–≤–æ—é id –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—ñ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î container/product-edit –∑ –¥–∞–Ω–∏–º–∏ —Ç–æ–≤–∞—Ä—É

router.get('/product-edit', function (req, res) {
  const { id } = req.query
  const product = Product.getById(Number(id))
  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
      added: false,
    })
  } else {
    res.render('product-edit', {
      style: 'product-edit',
      title: 'JS-PRACTICE-CRUD',
      data: {
        product,
      },
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ –¥–∏–∑–∞–π–Ω —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –¥–ª—è container/product-edit, –≤ —è–∫–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑ req.query –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–±‚Äô—î–∫—Ç —Å—É—Ç–Ω–æ—Å—Ç—ñ product –∑ —Ç–∞–∫–∏–º id
// - –ø—Ä–æ–∫–∏–Ω—É—Ç–∏ –¥–∞–Ω—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É –≤ container
// - –≤–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É –≤ –ø–æ–ª—è—Ö —Ñ–æ—Ä–º–∏ –≤ container/product-edit.
// - —è–∫—â–æ –ø—Ä–∏ –ø–æ—à—É–∫—É product –ø–æ id –Ω–µ –±—É–ª–æ –∑–Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä—É, —Ç–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é "–¢–æ–≤–∞—Ä –∑ —Ç–∞–∫–∏–º ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ endpoint POST –∑ PATH /product-edit —è–∫–∏–π –æ—Ç—Ä–∏–º—É—î –≤ req.body –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è product

router.post('/product-edit', function (req, res) {
  const { id, name, price, description } = req.body
  const product = Product.getById(Number(id))

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
    })
  } else {
    const isChanged =
      name !== product.name ||
      price !== product.price ||
      description !== product.description

    if (!isChanged) {
      return res.render('alert', {
        style: 'alert',
        message: '‚ö†Ô∏è Make changes to at least one field',
        id,
        isCheck: true,
      })
    }

    product.name = name
    product.price = price
    product.description = description
    res.render('alert', {
      style: 'alert',
      message: '‚úÖ Success! Product updated!',
      added: true,
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É –∑ container/product-edit, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç method: POST, action: /product-edit

// –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–±–µ—Ä–µ–≥—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ POST –∑–∞–ø–∏—Ç –Ω–∞ –µ–Ω–¥–ø–æ—ó–Ω—Ç /product-edit

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-edit –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.body –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ —Ç–æ–≤–∞—Ä—É (name, price, description) —Ç–∞ id —Ç–æ–≤–∞—Ä—É
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id —Ç–æ–≤–∞—Ä—É –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≤ —Ç–æ–≤–∞—Ä—ñ (name, price, description)
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

//! –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ GET endpoint –∑ PATH /product-delete —è–∫–∏–π –ø—Ä–∏–π–º–∞—î query –ø–∞—Ä–∞–º–µ—Ç—Ä –∑ –Ω–∞–∑–≤–æ—é id –≤ –ø–æ—Å–∏–ª–∞–Ω—ñ

router.get('/product-delete', function (req, res) {
  const { id } = req.query
  const product = Product.getById(Number(id))

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
      added: false,
    })
  } else {
    res.render('product-delete', {
      style: 'product-delete',
      title: 'JS-PRACTICE-CRUD',
      data: {
        product,
      },
    })
  }
})

// –≤–∏—â–µ –Ω–∞ —Ñ–æ—Ç–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—É –∑ container/product-edit, –≤ —è–∫—ñ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - –∑—Ä–æ–±–∏—Ç–∏ –∫–Ω–æ–ø–∫—É-–ø–æ—Å–∏–ª–∞–Ω–Ω—è "–í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä"
// - —è–∫–µ –±—É–¥–µ –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É-–µ–Ω–¥–ø–æ—ó–Ω—Ç –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
// - —Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É.
// - PATH: /product-edit?id=<—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É>

// –≤ –µ–Ω–¥–ø–æ—ó–Ω—Ç—ñ /product-delete –ø–æ—Ç—Ä—ñ–±–Ω–æ:
// - —á–µ—Ä–µ–∑ req.query –æ—Ç—Ä–∏–º–∞—Ç–∏ id —Ç–æ–≤–∞—Ä—É
// - –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é id —Ç–æ–≤–∞—Ä—É –≤–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä
// - –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∞–±–æ –Ω–µ—É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ container/alert –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó

// POST endpoint to handle product deletion
router.post('/product-delete', function (req, res) {
  const { id } = req.body
  const product = Product.getById(Number(id))

  if (!product) {
    res.render('alert', {
      style: 'alert',
      message: 'üÜò Product with that ID was not found!',
    })
  } else {
    const deleted = Product.deleteById(Number(id))
    if (deleted) {
      res.render('alert', {
        style: 'alert',
        message: '‚õî Product deleted!',
        added: true,
      })
    } else {
      res.render('alert', {
        style: 'alert',
        message: 'üÜò Could not delete the product',
      })
    }
  }
})
// ===========================================================================

//! ========================PURCHASE========================================
//! ========================PURCHASE========================================
class PurchaseProduct {
  static #list = []

  constructor(
    img,
    title,
    description,
    category,
    price,
    amount = 0,
  ) {
    ;(this.id = Math.floor(Math.random() * 90000) + 10000),
      (this.img = img),
      (this.title = title),
      (this.description = description),
      (this.category = category),
      (this.price = price),
      (this.amount = amount)
  }

  static removeFormatting = (priceStr) =>
    priceStr.replace(/[\s,]/g, '')

  static add = (...data) => {
    this.#list.push(new PurchaseProduct(...data))
  }

  static getList = () => this.#list

  static getById = (id) =>
    this.#list.find((purchase) => purchase.id === id)

  static getRandomList = (id) => {
    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç–æ–≤–∞—Ä–∏, —â–æ–± –≤–∏–ª—É—á–∏—Ç–∏ —Ç–æ–π, –∑ —è–∫–∏–º –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ id
    const filteredList = this.#list.filter(
      (purchase) => purchase.id !== id,
    )

    // –í—ñ–¥—Å–æ—Ä—Ç—É—î–º–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Math.random() —Ç–∞ –ø–µ—Ä–µ–º—ñ—à–∞—î–º–æ –º–∞—Å–∏–≤
    const shuffledList = filteredList.sort(
      () => Math.random() - 0.5,
    )

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–µ—Ä—à—ñ 3 –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ –ø–µ—Ä–µ–º—ñ—à–∞–Ω–æ–≥–æ –º–∞—Å–∏–≤—É
    return shuffledList.slice(0, 4)
  }
}

PurchaseProduct.add(
  '/img/img-purchase/img616.jpg',
  'Computer Artline Gaming (X43v31) AMD Ryzen 5 3600/',
  'AMD Ryzen 5 3600 (3.6 - 4.2 –ì–ì—Ü) / RAM 16 –ì–ë / HDD 1 –¢–ë + SSD 480 –ì–ë / nVidia GeForce RTX 3050, 8 –ì–ë / –±–µ–∑ –û–î / LAN / –±–µ–∑ –û–°',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'top sales',
      color: 'blue',
      isBadge: true,
    },
  ],
  '27 000',
  12,
)

PurchaseProduct.add(
  '/img/img-purchase/img617.jpg',
  'Computer COBRA Advanced (I11F.8.H1S2.15T.13356) Intel',
  'Intel Core i3-10100F (3.6 - 4.3 –ì–ì—Ü) / RAM 8 –ì–ë / HDD 1 –¢–ë + SSD 240 –ì–ë / GeForce GTX 1050 Ti, 4 –ì–ë / –±–µ–∑ –û–î / LAN / Linux',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'top sales',
      color: 'blue',
      isBadge: true,
    },
  ],
  '17 000',
  14,
)

PurchaseProduct.add(
  '/img/img-purchase/img618.jpg',
  'Computer ARTLINE Gaming by ASUS TUF v119 (TUFv119)',
  'Intel Core i9-13900KF (3.0 - 5.8 –ì–ì—Ü) / RAM 64 –ì–ë / SSD 2 –¢–ë (2 x 1 –¢–ë) / nVidia GeForce RTX 4070 Ti, 12 –ì–ë / –±–µ–∑ –û–î / LAN / Wi-Fi',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'top sales',
      color: 'blue',
      isBadge: false,
    },
  ],
  '113 109',
  6,
)

PurchaseProduct.add(
  '/img/img-purchase/img619.jpg',
  'Computer ARTLINE Gaming X66 v37 (X66v37) AMD Ryzen 5 5500/',
  'AMD Ryzen 5 5500 (3.6 - 4.2 –ì–ì—Ü) / RAM 16 –ì–ë / SSD 1 T–ë / nVIdia GeForce RTX 3060 Ti, 8 –ì–ë / –±–µ–∑ –û–î / LAN / –±–µ–∑ –û–°',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'novelty',
      color: 'purple',
      isBadge: true,
    },
  ],
  '32 499',
  8,
)

PurchaseProduct.add(
  '/img/img-purchase/img620.jpg',
  'Computer ARTLINE Gaming X77 v39 (X77v39) Intel Core i7-10700F',
  'Intel Core i7-10700F (2.9 ‚Äî 4.8 –ì–ì—Ü) / RAM 32 –ì–ë / SSD 1 –¢–ë / nVidia GeForce RTX 3070, 8 –ì–ë / –±–µ–∑ –û–î / LAN / –±–µ–∑ –û–°',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: false,
    },
    {
      id: 2,
      text: 'novelty',
      color: 'purple',
      isBadge: true,
    },
  ],
  '36 999',
  10,
)

PurchaseProduct.add(
  '/img/img-purchase/img621.jpg',
  'Computer COBRA Advanced (A36.16.S4.165.6130) AMD Ryzen',
  'AMD Ryzen 5 3600 (3.6 ‚Äî 4.2 –ì–ì—Ü) / RAM 16 –ì–ë / SSD 480 –ì–ë / nVidia GeForce GTX 1650, 4 –ì–ë / –±–µ–∑ –û–î / LAN / Linux',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'top sales',
      color: 'blue',
      isBadge: true,
    },
  ],
  '18 499',
  15,
)

PurchaseProduct.add(
  '/img/img-purchase/img622.jpg',
  'Computer QUBE Gaming Intel Core i5-10400F / RAM 1 –ì–ë / HDD 1–¢–ë',
  'Intel Core i5-10400F (2.9 ‚Äî 4.3 –ì–ì—Ü) / RAM 16 –ì–ë / HDD 1 –¢–ë + SSD 240 –ì–ë / nVidia GeForce RTX 3060, 12 –ì–ë / –±–µ–∑ –û–î / LAN / –±–µ–∑ –û–°',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'novelty',
      color: 'purple',
      isBadge: false,
    },
  ],
  '28 999',
  7,
)

PurchaseProduct.add(
  '/img/img-purchase/img623.jpg',
  'Computer ARTLINE Overlord X99 (X99v68)',
  'Intel Core i9-13900KF (3.0 - 5.8 –ì–ì—Ü) / RAM 64 –ì–ë / SSD 2 –¢–ë (2 x 1 –¢–ë) / nVidia GeForce RTX 4090, 24 –ì–ë / –±–µ–∑ –û–î / LAN / Wi-Fi',
  [
    {
      id: 1,
      text: 'ready to ship',
      color: 'green',
      isBadge: true,
    },
    {
      id: 2,
      text: 'novelty',
      color: 'purple',
      isBadge: true,
    },
  ],
  '175 999',
  5,
)

class Purchase {
  static DELIVERY_PRICE = 150
  // #BONUS_FACTOR - –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –≤—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤ –∑–∞ —Ü—ñ–Ω—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  static #BONUS_FACTOR = 0.1

  static #list = []

  // —Å–ª–æ–≤–Ω–∏–∫ –≤ —è–∫–æ–º—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ "–∫–ª—é—á: –∑–Ω–∞—á–µ–Ω–Ω—è" –±—É–¥–µ —ñ—Ç–∏ –ø–æ—à—Ç–∞ —Ç–∞ –±–æ–Ω—É—Å–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ —Ü—ñ–π –ø–æ—à—Ç—ñ
  static #bonusAccount = new Map()

  // –≤–∏—Ç–∞—Å–∫—É—î –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–∞ –∞ —è–∫—â–æ –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î 0
  static getBonusBalance = (email) => {
    return Purchase.#bonusAccount.get(email) || 0
  }

  static calcBonusAmount = (value) => {
    return value * Purchase.#BONUS_FACTOR
  }

  static updateBonusBalance = (
    email,
    price,
    bonusUse = 0,
  ) => {
    // –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–≤–∏—Ö –±–æ–Ω—É—Å—ñ–≤
    const amount = this.calcBonusAmount(price)

    //–ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —è–∫–∏–π –º–∏ –≤–∏—Ç—è–≥—É—î–º —á–µ—Ä–µ–∑ - getBonusBalance
    const currentBalance = Purchase.getBonusBalance(email)

    const updatedBalance =
      currentBalance + amount - bonusUse

    Purchase.#bonusAccount.set(email, updatedBalance)

    console.log(email, updatedBalance)

    return amount
  }

  constructor(data, product) {
    this.id = Math.floor(Math.random() * 90000) + 10000

    // –æ–±–æ–≤—è–∑–∫–æ–≤—ñ –¥–∞–Ω—ñ
    this.firstname = data.firstname
    this.lastname = data.lastname
    this.phone = data.phone
    this.email = data.email

    // –Ω–µ–æ–±–æ–≤—è–∑–∫–æ–≤—ñ –¥–∞–Ω—ñ
    this.comment = data.comment || null
    this.promocode = data.promocode || null

    // —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø–æ–ª—è
    this.totalPrice = data.totalPrice
    this.bonus = Math.floor(
      Purchase.calcBonusAmount(this.totalPrice),
    )
    this.productPrice = data.productPrice
    this.deliveryPrice = data.deliveryPrice
    this.amount = data.amount

    this.product = product
  }

  static add = (...arg) => {
    const newPurchase = new Purchase(...arg)

    this.#list.push(newPurchase)

    return newPurchase
  }

  // —â–æ–± —Å–ø–æ—á–∞—Ç–∫—É –≤–∏–≤–æ–¥–∏–ª–∏—Å—å –æ—Å—Ç–∞–Ω–Ω—ñ –ø–æ–∫—É–ø–∫–∏
  static getList = () => {
    return Purchase.#list.reverse()
  }

  static getById = (id) => {
    return Purchase.#list.find((item) => item.id === id)
  }

  static deleteById = (id) => {
    const index = this.#list.findIndex(
      (product) => product.id === id,
    )
    if (index !== -1) {
      this.#list.splice(index, 1)
      return true
    } else {
      return false
    }
  }

  static updateById = (id, data) => {
    const purchase = Purchase.getById(id)

    if (purchase) {
      if (data.firstname)
        purchase.firstname = data.firstname
      if (data.lastname) purchase.lastname = data.lastname
      if (data.phone) purchase.phone = data.phone
      if (data.email) purchase.email = data.email

      purchase.bonus = Math.round(
        Purchase.calcBonusAmount(purchase.totalPrice),
      )

      return true
    } else {
      return false
    }
  }
}

class Promocode {
  static #list = []

  constructor(name, factor) {
    this.name = name
    // —Ñ–∞–∫—Ç–æ—Ä - –º–Ω–æ–∂–Ω–∏–∫ –Ω–∞ —è–∫–∏–π –±—É–¥–µ –º–Ω–æ–∂–∏—Ç–∏—Å—å —Ü—ñ–Ω–∞, —â–æ–± –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ü—ñ–Ω—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–∫–∏ –≤—ñ–¥ –ø—Ä–æ–º–æ–∫–æ–¥—É
    this.factor = factor
  }

  static add = (name, factor) => {
    const newPromocode = new Promocode(name, factor)
    Promocode.#list.push(newPromocode)
    return newPromocode
  }

  // —à—É–∫–∞—î –ø—Ä–æ–º–æ–∫–æ–¥ –ø–æ –Ω–∞–∑–≤—ñ
  static getByName = (name) => {
    return this.#list.find((promo) => promo.name === name)
  }

  static calc = (promo, price) => {
    return price * promo.factor
  }
}

Promocode.add('BLACKFRIDAY', 0.9)
Promocode.add('NEWYEAR', 0.5)
Promocode.add('CHRISTMAS', 0.85)

// ===========================================================================

// router.get –°—Ç–≤–æ—Ä—é—î –Ω–∞–º –æ–¥–∏–Ω –µ–Ω—Ç–ø–æ—ó–Ω—Ç

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/purchase-product', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É

  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('purchase-product', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'purchase-product',

    data: {
      list: PurchaseProduct.getList(),
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

//================================================================

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/purchase-card-preview', function (req, res) {
  const id = Number(req.query.id)

  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('purchase-card-preview', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'purchase-card-preview',

    data: {
      list: PurchaseProduct.getRandomList(id),
      product: PurchaseProduct.getById(id),
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ===========================================================================

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/purchase-basket', function (req, res) {
  const id = Number(req.query.id)
  const amount = Number(req.body.amount)

  console.log(amount)

  if (amount < 1) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: '‚ö†Ô∏è Enter the correct quantity',
        link: `/purchase-card-preview?id=${id}`,
      },
    })
  }

  const product = PurchaseProduct.getById(id)

  if (amount > product.amount) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: '‚ö†Ô∏è This quantity is not available',
        att:
          'Now ' + product.amount + ' pieces are available',
        link: `/purchase-card-preview?id=${id}`,
      },
    })
  }

  const formatPrice = PurchaseProduct.removeFormatting(
    product.price,
  )
  const numericPrice = parseInt(
    PurchaseProduct.removeFormatting(formatPrice),
    10,
  )

  const productPrice = numericPrice * amount
  const totalPrice = productPrice + Purchase.DELIVERY_PRICE
  const bonus = Math.floor(
    Purchase.calcBonusAmount(totalPrice),
  )

  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('purchase-basket', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'purchase-basket',

    data: {
      id: product.id,

      info: {
        productTitle: product.title,
        quantity: amount,
        productPrice: productPrice,
        deliveryPrice: Purchase.DELIVERY_PRICE,
      },
      totalPrice,
      productPrice,
      deliveryPrice: Purchase.DELIVERY_PRICE,
      amount,
      bonus,
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ===========================================================================
// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.post('/purchase-submit', function (req, res) {
  const id = Number(req.query.id)

  let {
    totalPrice,
    productPrice,
    deliveryPrice,
    amount,

    firstname,
    lastname,
    email,
    phone,

    comment,
    promocode,
    bonus,
  } = req.body

  const product = PurchaseProduct.getById(id)

  if (!product) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: 'üÜò Product with that ID was not found!',
        link: `/purchase-card-preview?id=${id}`,
      },
    })
  }

  totalPrice = Number(totalPrice)
  productPrice = Number(productPrice)
  deliveryPrice = Number(deliveryPrice)
  amount = Number(amount)
  bonus = Number(bonus)

  if (
    isNaN(totalPrice) ||
    isNaN(productPrice) ||
    isNaN(deliveryPrice) ||
    isNaN(amount)
  ) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: 'üÜò Invalid data entered!',
        link: `/purchase-card-preview?id=${id}`,
      },
    })
  }

  if (bonus < 0) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: 'üÜò Invalid data entered!',
        link: `/purchase-card-preview?id=${id}`,
      },
    })
  }

  if (!firstname || !lastname || !email || !phone) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: 'üÜò Error!',
        message: '‚ö†Ô∏è Please fill in the required fields',
        link: `/purchase-basket?id=${id}`,
      },
    })
  }

  // bonus || bonus > 0 - –±–æ–Ω—É—Å —î —ñ –≤—ñ–Ω –±–æ–ª—å—à–µ 0, —â–æ–± –Ω–µ –±—É–ª–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥—î–º–Ω–∏–π –±–æ–Ω—É—Å –ø–∏—à–µ
  if (bonus || bonus > 0) {
    const bonusAmount = Purchase.getBonusBalance(email)

    console.log(bonusAmount)

    if (bonus > bonusAmount) {
      bonus = bonusAmount
    }

    Purchase.updateBonusBalance(email, totalPrice, bonus)

    totalPrice -= bonus
  } else {
    Purchase.updateBonusBalance(email, totalPrice, 0)
  }

  if (promocode) {
    promocode = Promocode.getByName(promocode)

    if (promocode) {
      totalPrice = Promocode.calc(promocode, totalPrice)
    }
  }

  if (totalPrice < 0) totalPrice = 0

  // —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...
  const purchase = Purchase.add(
    {
      totalPrice,
      productPrice,
      deliveryPrice,
      amount,

      firstname,
      lastname,
      email,
      phone,

      promocode,
      comment,
      bonus,
    },
    product,
  )

  console.log(purchase)
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('alert-purchase-submit', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'alert-purchase-submit',

    data: {
      info: '‚úÖ Success!',
      message: '‚úÖ The order was created!',
      link: `/purchase-list`,
    },
  })

  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ===========================================================================

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/purchase-list', function (req, res) {
  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('purchase-list', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'purchase-list',

    data: {
      list: Purchase.getList(),
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// ===========================================================================
router.delete('/purchase-delete', function (req, res) {
  const { id } = req.query
  const success = Purchase.deleteById(Number(id))

  res.json({ success })
})

// ===========================================================================

router.get('/get-cart-count', function (req, res) {
  // –û—Ç—Ä–∏–º–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ –∑ –∫–ª–∞—Å—É Purchase
  const cartItems = Purchase.getList()

  // –û–±—á–∏—Å–ª—ñ—Ç—å –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ
  const cartCount = cartItems.reduce(
    (total, item) => total + item.amount,
    0,
  )

  res.json({ cartCount })
})

// =============================================================================

// ‚ÜôÔ∏è —Ç—É—Ç –≤–≤–æ–¥–∏–º–æ —à–ª—è—Ö (PATH) –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
router.get('/purchase-info', function (req, res) {
  const id = Number(req.query.id)

  // res.render –≥–µ–Ω–µ—Ä—É—î –Ω–∞–º HTML —Å—Ç–æ—Ä—ñ–Ω–∫—É
  // ‚ÜôÔ∏è c—é–¥–∏ –≤–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É –∑ —Åontainer
  res.render('purchase-info', {
    // –≤–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤ —è–∫—ñ–π –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞—à—ñ —Å—Ç–∏–ª—ñ
    style: 'purchase-info',

    data: {
      list: Purchase.getById(id),
    },
  })
  // ‚Üë‚Üë —Å—é–¥–∏ –≤–≤–æ–¥–∏–º–æ JSON –¥–∞–Ω—ñ
})

// =============================================================================

router.get('/purchase-edit', function (req, res) {
  const id = Number(req.query.id)

  res.render('purchase-edit', {
    style: 'purchase-edit',
    data: {
      purchase: Purchase.getById(id),
    },
  })
})

// =============================================================================

router.post('/purchase-update', function (req, res) {
  const { firstname, lastname, phone, email } = req.body
  const id = Number(req.query.id)

  const purchase = Purchase.getById(id);

  const isChanged =
    firstname !== purchase.firstname ||
    lastname !== purchase.lastname ||
    phone !== purchase.phone ||
    email !== purchase.email;

  if (!isChanged) {
    return res.render('alert-purchase', {
      style: 'alert-purchase',

      data: {
        info: '‚ö†Ô∏è Warning!',
        message: '‚ö†Ô∏è Make changes to at least one field',
        link: `/purchase-edit?id=${id}`,
      },
    })
  }
 

  Purchase.updateById(id, {
    firstname,
    lastname,
    phone,
    email,
  })

  res.render('alert-purchase', {
    style: 'alert-purchase',

    data: {
      info: '‚úÖ Success!',
      message: '‚úÖ Purchase details updated',
      link: `/purchase-info?id=${id}`,
    },
  })
})

// =============================================================================

// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ —Ä–æ—É—Ç–µ—Ä –¥–æ –±–µ–∫-–µ–Ω–¥—É
module.exports = router
